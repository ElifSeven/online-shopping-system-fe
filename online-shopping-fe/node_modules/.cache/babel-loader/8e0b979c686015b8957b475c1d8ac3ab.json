{"ast":null,"code":"var _jsxFileName = \"/Users/elifseven/Desktop/web_app_project/online-shop/src/Components/ProductsHeader/ProductsHeader.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProductsHeader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openPriceDialog: false\n    };\n  }\n\n  render() {\n    let _this$props = this.props,\n        parsedQS = _this$props.parsedQS,\n        totalItemsCount = _this$props.totalItemsCount,\n        updateQueryString = _this$props.updateQueryString; // Grab some values from the query string\n\n    let usePriceFilter = parsedQS.usePriceFilter === \"true\";\n    let minPrice = parsedQS.minPrice || 0;\n    let maxPrice = parsedQS.maxPrice || 1000;\n    let sortValue = parsedQS.sortValue || \"lh\";\n    let keyword = parsedQS.term;\n    let category = parsedQS.category;\n    let subtitle = React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontSize: 12,\n        color: \"#C1A\",\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, totalItemsCount + \" result\" + (totalItemsCount === 1 ? \" \" : \"s \") + (keyword ? \"for \" : \"\")), keyword && React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: 12,\n        color: \"gray\",\n        marginTop: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, keyword));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: 10,\n        display: \"flex\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1,\n        fontSize: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, category ? category : \"Popular Products\"), subtitle), React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        color: \"primary\",\n        checked: usePriceFilter,\n        onChange: e => {\n          updateQueryString({\n            usePriceFilter: e.target.checked,\n            page: 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      label: \"Filter by price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), usePriceFilter && React.createElement(Tooltip, {\n      title: \"Click to change range\",\n      disableFocusListener: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        marginRight: 20\n      },\n      onClick: () => {\n        this.setState({\n          openPriceDialog: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, minPrice + \"$ - \" + maxPrice + \"$\")), React.createElement(Select, {\n      value: sortValue,\n      onChange: e => {\n        updateQueryString({\n          sortValue: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"lh\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Sort by price: low to high\"), React.createElement(MenuItem, {\n      value: \"hl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Sort by price: high to low\"))), React.createElement(PriceDialog, {\n      open: this.state.openPriceDialog,\n      min: minPrice,\n      max: maxPrice,\n      onSave: (min, max) => {\n        this.setState({\n          openPriceDialog: false\n        });\n        updateQueryString({\n          minPrice: min,\n          maxPrice: max,\n          page: 1\n        });\n      },\n      onClose: () => this.setState({\n        openPriceDialog: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(ProductsHeader);","map":{"version":3,"sources":["/Users/elifseven/Desktop/web_app_project/online-shop/src/Components/ProductsHeader/ProductsHeader.js"],"names":["React","Component","Button","Tooltip","PriceDialog","MenuItem","Select","FormControlLabel","Checkbox","withRouter","ProductsHeader","state","openPriceDialog","render","props","parsedQS","totalItemsCount","updateQueryString","usePriceFilter","minPrice","maxPrice","sortValue","keyword","term","category","subtitle","fontSize","color","marginTop","fontWeight","padding","display","alignItems","flex","e","target","checked","page","marginRight","setState","value","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PriceDialog from \"../PriceDialog/PriceDialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ProductsHeader extends Component {\n  state = {\n    openPriceDialog: false\n  };\n\n  render() {\n    let { parsedQS, totalItemsCount, updateQueryString } = this.props;\n  \n    // Grab some values from the query string\n    let usePriceFilter = parsedQS.usePriceFilter === \"true\";\n    let minPrice = parsedQS.minPrice || 0;\n    let maxPrice = parsedQS.maxPrice || 1000;\n    let sortValue = parsedQS.sortValue || \"lh\";\n    let keyword = parsedQS.term;\n    let category = parsedQS.category;\n\n    let subtitle = (\n      <React.Fragment>\n        <span style={{ fontSize: 12, color: \"#C1A\", marginTop: 5 }}>\n          {totalItemsCount +\n            \" result\" +\n            (totalItemsCount === 1 ? \" \" : \"s \") +\n            (keyword ? \"for \" : \"\")}\n        </span>\n        {keyword && (\n          <span\n            style={{\n              fontWeight: \"bold\",\n              fontSize: 12,\n              color: \"gray\",\n              marginTop: 5\n            }}\n          >\n            {keyword}\n          </span>\n        )}\n      </React.Fragment>\n    );\n\n    return (\n      <div>\n        <div style={{ padding: 10, display: \"flex\", alignItems: \"center\" }}>\n          <div style={{ flex: 1, fontSize: 24 }}>\n            <div>{category ? category : \"Popular Products\"}</div>\n            {subtitle}\n          </div>\n\n          <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={usePriceFilter}\n                onChange={e => {\n                  updateQueryString({\n                    usePriceFilter: e.target.checked,\n                    page: 1\n                  });\n                }}\n              />\n            }\n            label=\"Filter by price\"\n          />\n          {usePriceFilter && (\n            <Tooltip title=\"Click to change range\" disableFocusListener>\n              <Button\n                variant=\"outlined\"\n                style={{ marginRight: 20 }}\n                onClick={() => {\n                  this.setState({\n                    openPriceDialog: true\n                  });\n                }}\n              >\n                {minPrice + \"$ - \" + maxPrice + \"$\"}\n              </Button>\n            </Tooltip>\n          )}\n          <Select\n            value={sortValue}\n            onChange={e => {\n              updateQueryString({ sortValue: e.target.value });\n            }}\n          >\n            <MenuItem value={\"lh\"}>Sort by price: low to high</MenuItem>\n            <MenuItem value={\"hl\"}>Sort by price: high to low</MenuItem>\n          </Select>\n        </div>\n\n        {/* This is dialog which opens up for setting price filter */}\n        <PriceDialog\n          open={this.state.openPriceDialog}\n          min={minPrice}\n          max={maxPrice}\n          onSave={(min, max) => {\n            this.setState({ openPriceDialog: false });\n            updateQueryString({ minPrice: min, maxPrice: max, page: 1 });\n          }}\n          onClose={() =>\n            this.setState({\n              openPriceDialog: false\n            })\n          }\n        />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ProductsHeader);\n"]},"metadata":{},"sourceType":"module"}