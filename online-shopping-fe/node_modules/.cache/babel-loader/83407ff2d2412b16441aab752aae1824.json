{"ast":null,"code":"var _jsxFileName = \"/Users/elifseven/Desktop/web_app_project/online-shopping-fe/src/Components/PriceDialog/PriceDialog.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass PriceDialog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lastOpenedStatus: false\n    };\n  }\n\n  // Only when this dialog is opened, copy the prices to local state.\n  static getDerivedStateFromProps(props, state) {\n    if (props.open === true && state.lastOpenedStatus === false) {\n      return {\n        min: props.min,\n        max: props.max,\n        lastOpenedStatus: true\n      };\n    }\n\n    return {\n      lastOpenedStatus: props.open\n    };\n  }\n\n  render() {\n    let _this$state = this.state,\n        min = _this$state.min,\n        max = _this$state.max;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Dialog, {\n      open: this.props.open,\n      onClose: () => {\n        this.props.onClose();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Enter price range\"), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      value: min,\n      type: \"number\",\n      style: {\n        width: 70\n      },\n      placeholder: \"Min\",\n      label: \"Min\",\n      onChange: e => {\n        let val = parseInt(e.target.value, 10);\n\n        if (Number.isNaN(val) || val < 0 || val > 100000) {\n          return;\n        }\n\n        this.setState({\n          min: val\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: max,\n      type: \"number\",\n      style: {\n        width: 70,\n        marginLeft: 20\n      },\n      placeholder: \"Max\",\n      label: \"Max\",\n      onChange: e => {\n        let val = parseInt(e.target.value, 10);\n\n        if (Number.isNaN(val) || val < 0 || val > 100000) {\n          return;\n        }\n\n        this.setState({\n          max: val\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        padding: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      style: {\n        width: 50\n      },\n      onClick: () => {\n        this.props.onSave(min, max);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"OK\"), React.createElement(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      style: {\n        width: 50,\n        marginLeft: 5\n      },\n      onClick: () => {\n        this.props.onClose();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default PriceDialog;","map":{"version":3,"sources":["/Users/elifseven/Desktop/web_app_project/online-shopping-fe/src/Components/PriceDialog/PriceDialog.js"],"names":["React","Component","Button","Dialog","DialogTitle","TextField","PriceDialog","state","lastOpenedStatus","getDerivedStateFromProps","props","open","min","max","render","onClose","display","flexDirection","alignItems","padding","width","e","val","parseInt","target","value","Number","isNaN","setState","marginLeft","onSave"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\n\nclass PriceDialog extends Component {\n  state = {\n    lastOpenedStatus: false,\n  };\n\n\n  // Only when this dialog is opened, copy the prices to local state.\n  static getDerivedStateFromProps(props, state) {\n    if (props.open === true && state.lastOpenedStatus === false) {\n      return {\n        min: props.min,\n        max: props.max,\n        lastOpenedStatus: true,\n      };\n    }\n\n    return { lastOpenedStatus: props.open };\n  }\n\n  render() {\n    let { min, max } = this.state;\n\n    return (\n      <div>\n        <Dialog\n          open={this.props.open}\n          onClose={() => {\n            this.props.onClose();\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\"\n            }}\n          >\n            <DialogTitle>Enter price range</DialogTitle>\n\n            <div style={{ display: \"flex\", padding: 20 }}>\n              <TextField\n                value={min}\n                type=\"number\"\n                style={{ width: 70 }}\n                placeholder=\"Min\"\n                label=\"Min\"\n                onChange={e => {\n                  let val = parseInt(e.target.value, 10);\n                  if (\n                    Number.isNaN(val) ||\n                    val < 0 ||\n                    val > 100000\n                  ) {\n                    return;\n                  }\n                  this.setState({\n                    min: val\n                  });\n                }}\n              />\n              <TextField\n                value={max}\n                type=\"number\"\n                style={{ width: 70, marginLeft: 20 }}\n                placeholder=\"Max\"\n                label=\"Max\"\n                onChange={e => {\n                  let val = parseInt(e.target.value, 10);\n\n                  if (\n                    Number.isNaN(val) ||\n                    val < 0 ||\n                    val > 100000\n                  ) {\n                    return;\n                  }\n                  this.setState({\n                    max: val\n                  });\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", padding: 20 }}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                style={{ width: 50 }}\n                onClick={() => {\n                  this.props.onSave(min, max);\n                }}\n              >\n                OK\n              </Button>\n              <Button\n                color=\"primary\"\n                variant=\"outlined\"\n                style={{ width: 50, marginLeft: 5 }}\n                onClick={() => {\n                  this.props.onClose();\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default PriceDialog;\n"]},"metadata":{},"sourceType":"module"}