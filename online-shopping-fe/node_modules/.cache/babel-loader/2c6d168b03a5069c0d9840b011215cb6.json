{"ast":null,"code":"import _objectSpread from \"/Users/elifseven/Desktop/web_app_project/online-shop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/elifseven/Desktop/web_app_project/online-shop/src/Components/Menu/Menu.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { dataForTheMenu } from \"../../Data\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst mapStateToProps = state => {\n  return {\n    showMenu: state.showMenu\n  };\n};\n\nclass ConnectedMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // initially item with id 1 is expanded\n      expandedMenuItems: {\n        1: true\n      },\n      dataForTheMenu\n    };\n    this.renderMenu = this.renderMenu.bind(this);\n  } // This method determines from URL whether to highlight a menu item or not\n\n\n  isMenuItemActive(item, location) {\n    if (location.pathname === \"/\" && location.search) {\n      let queryStringParsed = queryString.parse(location.search);\n      return item.name === queryStringParsed.category;\n    }\n\n    return item.url === location.pathname;\n  }\n\n  renderMenu(data) {\n    return React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, data.map((x, i) => {\n      if (!x.children) {\n        return React.createElement(NavLink, {\n          to: x.url,\n          exact: true,\n          isActive: (param, location) => {\n            return this.isMenuItemActive(x, location);\n          },\n          style: {\n            textDecoration: \"none\",\n            color: \"rgb(32, 32, 34)\"\n          },\n          key: x.id,\n          activeStyle: {\n            color: \"#FBAD3C\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          dense: true,\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, x.icon, \"}\")), React.createElement(ListItemText, {\n          disableTypography: true,\n          primary: React.createElement(\"div\", {\n            style: {\n              color: \"inherit\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, x.name),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })));\n      } else {\n        return React.createElement(Fragment, {\n          key: x.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          button: true,\n          dense: true,\n          onClick: () => {\n            // Update in state which menu items are expanded.\n            this.setState(ps => {\n              return {\n                expandedMenuItems: _objectSpread({}, ps.expandedMenuItems, {\n                  [x.id]: !ps.expandedMenuItems[x.id]\n                })\n              };\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: x.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }), this.state.expandedMenuItems[x.id] ? React.createElement(ExpandLess, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }) : React.createElement(ExpandMore, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        })), React.createElement(Collapse, {\n          in: this.state.expandedMenuItems[x.id],\n          timeout: \"auto\",\n          unmountOnExit: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, this.renderMenu(x.children)));\n      }\n    }));\n  }\n\n  render() {\n    if (!this.props.showMenu) return null;\n    return React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#FAFAFB\",\n        minWidth: 250,\n        color: \"#FBAD3C\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.renderMenu(this.state.dataForTheMenu));\n  }\n\n}\n\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\nexport default Menu;","map":{"version":3,"sources":["/Users/elifseven/Desktop/web_app_project/online-shop/src/Components/Menu/Menu.js"],"names":["React","Component","Fragment","NavLink","queryString","connect","withRouter","dataForTheMenu","ExpandLess","ExpandMore","Icon","List","ListItem","ListItemIcon","ListItemText","Collapse","mapStateToProps","state","showMenu","ConnectedMenu","constructor","props","expandedMenuItems","renderMenu","bind","isMenuItemActive","item","location","pathname","search","queryStringParsed","parse","name","category","url","data","map","x","i","children","param","textDecoration","color","id","fontWeight","icon","setState","ps","render","backgroundColor","minWidth","Menu"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { dataForTheMenu } from \"../../Data\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport Icon from \"@material-ui/core/Icon\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\n\nconst mapStateToProps = state => {\n  return {\n    showMenu: state.showMenu,\n  };\n};\n\nclass ConnectedMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // initially item with id 1 is expanded\n      expandedMenuItems: {\n        1: true\n      },\n      dataForTheMenu\n    };\n\n    this.renderMenu = this.renderMenu.bind(this)\n  }\n\n  // This method determines from URL whether to highlight a menu item or not\n  isMenuItemActive(item, location) {\n\n    if (location.pathname === \"/\" && location.search) {\n      let queryStringParsed = queryString.parse(\n        location.search\n      );\n\n      return (\n        item.name === queryStringParsed.category\n      );\n    }\n\n    return item.url === location.pathname;\n  }\n\n  renderMenu(data) {\n\n    return (<List\n    >\n      {data\n        .map((x, i) => {\n\n          if (!x.children) {\n            return (\n              <NavLink\n                to={x.url}\n                exact\n                isActive={(param, location) => { return this.isMenuItemActive(x, location) }}\n                style={{\n                  textDecoration: \"none\",\n                  color: \"rgb(32, 32, 34)\",\n                }}\n                key={x.id}\n                activeStyle={{\n                  color: \"#FBAD3C\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                <ListItem dense button>\n                  <ListItemIcon>\n                    <Icon\n                    >{x.icon}}</Icon>\n                  </ListItemIcon>\n                  <ListItemText\n                    disableTypography\n                    primary={<div style={{ color: \"inherit\" }} >{x.name}</div>} />\n                </ListItem>\n              </NavLink>)\n\n          } else {\n            return (\n              <Fragment key={x.id}>\n                <ListItem button dense\n                  onClick={() => {\n                    // Update in state which menu items are expanded.\n                    this.setState(ps => {\n                      return {\n                        expandedMenuItems: {\n                          ...ps.expandedMenuItems,\n                          [x.id]: !ps.expandedMenuItems[x.id]\n                        }\n                      };\n                    });\n                  }}>\n\n                  <ListItemText primary={x.name} />\n                  {this.state.expandedMenuItems[x.id] ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={this.state.expandedMenuItems[x.id]} timeout=\"auto\" unmountOnExit>\n                  {this.renderMenu(x.children)}\n                </Collapse>\n              </Fragment>\n            );\n          }\n\n\n        })}\n    </List >)\n  }\n\n\n  render() {\n    if (!this.props.showMenu) return null;\n    return (\n      <div style={{\n        backgroundColor: \"#FAFAFB\",\n        minWidth: 250,\n        color:\"#FBAD3C\"\n      }}>\n        {/* Render our menu */}\n        {this.renderMenu(this.state.dataForTheMenu)}\n      </div>\n    );\n  }\n}\nconst Menu = withRouter(connect(mapStateToProps)(ConnectedMenu));\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}